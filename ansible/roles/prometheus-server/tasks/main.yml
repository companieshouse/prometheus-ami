---

- name: Ensure {{ prometheus_group }} group exists
  become: yes
  group:
    name: "{{ prometheus_group }}"
    system: yes

- name: Ensure {{ prometheus_user }} user exists
  become: yes
  user:
    name: "{{ prometheus_user }}"
    group: "{{ prometheus_user }}"
    system: yes

- name: Configure volume mounts
  include_role:
    name: mounted-volume

- name: Ensure Prometheus directory structure exists
  file:
    state: "directory"
    path: "{{ item }}"
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"
  with_items:
    - "{{ prometheus_root_dir }}"
    - "{{ prometheus_dist_dir }}"
    - "{{ prometheus_config_dir }}"
    - "{{ prometheus_data_dir }}"

- name: check if prometheus tarball exists locally
  stat:
    path: "{{ prometheus_dist_dir }}/{{ prometheus_tar_gz }}"
  register: prometheus_tar
- name: Get AWS Credentials
  set_fact:
    aws_access_key_id: "{{ lookup('env','AWS_ACCESS_KEY_ID') }}"
    aws_secret_access_key: "{{ lookup('env','AWS_SECRET_ACCESS_KEY') }}"
    cacheable: no
  no_log: True

- name: Download Prometheus tarball from S3
  aws_s3:
    bucket: "{{ resource_bucket_name }}"
    object: "{{ resource_bucket_prefix }}/{{ prometheus_tar_gz }}"
    dest: "{{ prometheus_dist_dir }}/{{ prometheus_tar_gz }}"
    mode: get
    aws_access_key: "{{ aws_access_key_id }}"
    aws_secret_key: "{{ aws_secret_access_key }}"

- name: Extract tarball
  unarchive:
    src: "{{ prometheus_dist_dir }}/{{ prometheus_tar_gz }}"
    dest: "{{ prometheus_dist_dir }}"
    copy: "no"
    creates: "{{ prometheus_dist_dir }}/prometheus-{{ prometheus_version }}.linux-amd64/prometheus"

- name: Cleanup tarball
  file:
    state: absent
    path: "{{ prometheus_dist_dir }}/{{ prometheus_tar_gz }}"

- name: Symlink to Prometheus server folder
  file:
    src: "{{ prometheus_dist_dir }}/prometheus-{{ prometheus_version }}.linux-amd64"
    dest: "{{ prometheus_server_dir }}"
    state: link

- name: Define default prometheus config file
  copy:
    src: "prometheus.yml"
    dest: "{{ prometheus_config_dir }}/prometheus.yml"
    mode: "0644"

- name: Configure prometheus service
  template:
    src: "etc/systemd/system/prometheus.service.j2"
    dest: "/etc/systemd/system/prometheus.service"

- name: Set prometheus service state
  service:
    name: "prometheus"
    state: "started"
    enabled: "yes"
